- name: Set zk_host_list variable
  set_fact:
    zk_host_list: []
- name: setting zk hosts
  set_fact:
    zk_host_list: "{{ zk_host_list }} + [ '{{ item }}' ]"
  with_items:
    "{{ groups['ec2_group'] }}"
  register: zk_host_list
- name: Set zk_host_port_list variable
  set_fact:
    zk_host_port_list: []
- name: setting zk host:port
  set_fact:
    zk_host_port_list: "{{ zk_host_port_list }} + [ '{{ item }}' + ':2181' ]"
  with_items:
    "{{ groups['ec2_group'] }}"
  register: zk_host_port_list
- name: Debugging
  debug:
    "msg": "{{ zk_host_port_list | join(',') }}"
- name: Upgrade all packages
  yum:
      name: '*'
      state: latest
- name: Check if Docker is installed
  command: systemctl status docker
  register: docker_check
  ignore_errors: yes
- name: Install docker
  yum:
    name: docker
    state: latest
- name: Remove the Docker installer file.
  file:
    state: absent
    path: /root/install_docker.sh
- name: Enable the Docker daemon in systemd
  systemd:
    name: docker
    enabled: yes
    masked: no
- name: Start the Docker daemon
  systemd:
    name: docker
    state: started
    masked: no
- name: Check if Docker Compose is installed
  command: docker-compose --version
  register: docker_compose_check
  ignore_errors: yes
- name: Download and install Docker Compose
  get_url:
    url: https://github.com/docker/compose/releases/download/1.21.2/docker-compose-Linux-x86_64
    dest: /usr/bin/docker-compose
    mode: 0755
  when:
    - docker_compose_check.msg is defined
    - docker_compose_check.msg.find('No such file or directory') != -1
- name: install pip
  yum:
    name: python-pip
    state: latest
- name: install pip docker
  pip:
    name: docker
- name: Log into DockerHub
  docker_login:
    username: ""
    password: ""
- name: copy storm.yaml
  copy:
    src: '{{playbook_dir}}/storm.yaml'
    dest: /etc/storm.yaml
    owner: root
    group: root
    mode: 0644
- name: Modify storm.yml
  lineinfile:
    path: '/etc/storm.yaml'
    insertafter: '^storm.zookeeper.servers:'
    line: '- "{{item}}"'
  with_items:
    "{{ zk_host_list }}"